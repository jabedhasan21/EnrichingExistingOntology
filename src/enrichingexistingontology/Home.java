/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package enrichingexistingontology;

import com.eeo.OpenNLP.OpenNLP;
import com.eeo.boilerpipe.Boilerpipe;

import com.eeo.jaws.*;
import de.l3s.boilerpipe.BoilerpipeProcessingException;
import java.io.IOException;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import org.xml.sax.SAXException;

import java.time.Instant;
import java.time.temporal.Temporal;
import java.time.temporal.ChronoUnit;
/**
 *
 * @author jabed hasan
 */
public class Home extends javax.swing.JFrame {

    public String WebContent = "";
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edit_word_txt = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        result_scrollPane = new java.awt.ScrollPane();
        result_textArea = new java.awt.TextArea();
        go_wikipedia_btn = new javax.swing.JButton();
        titlelabel = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Enriching Existing Ontology");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edit_word_txt.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        edit_word_txt.setToolTipText("Word");
        getContentPane().add(edit_word_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 182, -1));
        edit_word_txt.getAccessibleContext().setAccessibleName("edit_word_txt");

        search_btn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        search_btn.setText("Search");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });
        getContentPane().add(search_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 160, 40));

        result_textArea.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        result_scrollPane.add(result_textArea);

        getContentPane().add(result_scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 950, 380));

        go_wikipedia_btn.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        go_wikipedia_btn.setText("Go Wikipedia");
        go_wikipedia_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_wikipedia_btnActionPerformed(evt);
            }
        });
        getContentPane().add(go_wikipedia_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, -1, 40));

        titlelabel.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        titlelabel.setForeground(new java.awt.Color(59, 89, 152));
        titlelabel.setText("Enriching Existing Ontology");
        getContentPane().add(titlelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        String resutl = "";
        if( !edit_word_txt.getText().equals("") ) {
            result_textArea.setText(JawsAPI.getResult(edit_word_txt.getText()));
        }
        else{
            result_textArea.setText("");
            JOptionPane.showMessageDialog(rootPane, "Invalid Input", "Input Properly", NORMAL);
        }
    }//GEN-LAST:event_search_btnActionPerformed

    private void go_wikipedia_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_wikipedia_btnActionPerformed
     
        Instant previous, current;
        
        if( !edit_word_txt.getText().equals("") ) {
            try {
                System.out.println("Searching....."+edit_word_txt.getText());
                 previous = Instant.now();
                WebContent = Boilerpipe.DefaultExtractor(edit_word_txt.getText());
                //System.out.println("ok : "+ WebContent);
                current = Instant.now();
                if (previous != null) {
                 long gap = ChronoUnit.MILLIS.between(previous,current);
                 System.out.println("Searching Time : "+gap+"ms");
                }
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BoilerpipeProcessingException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            String sentences[] =  OpenNLP.SentenceDetect(WebContent);
            System.out.println("Detected sentences count from Web Content paragraph: "+sentences.length);
            NewConceptList newConceptList = new NewConceptList(sentences,edit_word_txt.getText());
            newConceptList.setVisible(true);
            this.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_go_wikipedia_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField edit_word_txt;
    private javax.swing.JButton go_wikipedia_btn;
    private java.awt.ScrollPane result_scrollPane;
    private java.awt.TextArea result_textArea;
    private javax.swing.JButton search_btn;
    private java.awt.Label titlelabel;
    // End of variables declaration//GEN-END:variables
}
